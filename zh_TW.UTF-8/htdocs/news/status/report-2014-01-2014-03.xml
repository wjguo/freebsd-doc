<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE report PUBLIC "-//FreeBSD//DTD FreeBSD XML Database for Status Report//EN" "http://www.FreeBSD.org/XML/share/xml/statusreport.dtd" >
<!-- $FreeBSD$ -->
<report>
  <date>
    <month>January-March</month>

    <year>2014</year>
  </date>

  <section>
    <title>Introduction</title>

    <p>This report covers &os;-related projects between January and
      March 2014.  This is the first of four reports planned for
      2014.</p>

    <p>The first quarter of 2014 was, again, a hectic and
      productive time for &os;.  The Ports team released their
      landmark first quarterly <q>stable</q> branch.  &os; continues
      to grow on the ARM architecture, now running on an ARM-based
      ChromeBook. SMP is now possible on multi-core ARM systems.
      bhyve, the native &os; hypervisor, continues to improve.  An
      integral test suite is taking shape, and the Jenkins Continuous
      Integration system has been implemented.  &os; patches to GCC
      are being <q>forward-ported</q>, and LLDB, the Clang/LLVM
      debugger is being ported. Desktop use has also seen
      improvements, with work on Gnome, KDE, Xfce, KMS video drivers,
      X.org, and <tt>vt</tt>, the new console driver which supports
      KMS and Unicode.  Linux and Wine binary compatibility layers
      have been improved.  UEFI booting support has been merged to
      head. The &os; Foundation continues to assist in moving &os;
      forward, sponsoring conferences and meetings and numerous
      development projects.  And these are only some of the things
      that happened! Read on for even more.</p>

    <p>Thanks to all the reporters for the excellent work!  This
      report contains 41 entries and we hope you enjoy reading it.</p>

    <p>The deadline for submissions covering between April and
      June 2014 is July 7th, 2014.</p>
  </section>

  <category>
    <name>team</name>

    <description>&os; Team Reports</description>
  </category>

  <category>
    <name>proj</name>

    <description>Projects</description>
  </category>

  <category>
    <name>kern</name>

    <description>Kernel</description>
  </category>

  <category>
    <name>arch</name>

    <description>Architectures</description>
  </category>

  <category>
    <name>bin</name>

    <description>Userland Programs</description>
  </category>

  <category>
    <name>ports</name>

    <description>Ports</description>
  </category>

  <category>
    <name>doc</name>

    <description>Documentation</description>
  </category>

  <category>
    <name>misc</name>

    <description>Miscellaneous</description>
  </category>

  <project cat='ports'>
    <title>Chromium</title>

    <contact>
      <person>
	<name>Chromium on &os; Team</name>
	<email>freebsd-chromium@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.chromium.org/Home">Chromium website</url>
      <url href="https://github.com/gliaskos/freebsd-chromium">Development repository on GitHub</url>
      <url href="https://wiki.freebsd.org/Chromium">Chromium on &os; wiki</url>
    </links>

    <body>
      <p>Chromium is the open source web browser project from which
	Google Chrome draws its source code.  The browsers share the
	majority of code and features, though there are some minor
	differences in features and they have different licensing.
	Over the last four years, the Chromium team has been busy with
	porting Chromium to &os;.  This involves patching the browser
	so that it runs on &os;, tracking and documenting security
	updates, and merging patches back upstream.</p>

      <p>While there are already several browsers available for &os;,
	advantages of Chromium are:</p>

      <ul>
	<li>Quick response from upstream to security issues, resulting
	  in approximately bi-weekly updates.</li>

	<li>A testbed for security features of &os;, like Capsicum.
	  While support for this capability and sandbox framework is
	  currently not included in the browser, a proof-of-concept
	  implementation for an early version of Chromium was realized
	  within a single weekend.</li>
      </ul>

      <p>George Liaskos and &a.rene; are currently busy with
	submitting the remaining patches specific to &os; back
	upstream.  Apart from making future updates easier, it
	sometimes also improves the overall code quality.</p>

      <p>&a.jonathan; recently updated the Capsicum patches for
	Chromium and is talking to upstream about them.</p>
    </body>

    <help>
      <task>Advocate &os;.  While patches are getting accepted by both
	humans and bots, it is not an official platform so attitude
	varies from developer to developer.  While &a.rene; thinks it
	is a bit early, it might be fruitful to investigate what is
	required to make &os; (and possibly OpenBSD) an official
	platform in terms of both hardware and procedures.</task>

      <task>If you feel comfortable with large source trees, you can
	try to build the Git version of Chromium on &os;.  If you are
	also comfortable with signing Google's Contributor License
	Agreement, you can join in testing and submitting patches
	upstream.</task>
    </help>
  </project>

  <project cat='doc'>
    <title>ZFS Chapter of the Handbook</title>

    <contact>
      <person>
	<name>
	  <given>Allan</given>
	  <common>Jude</common>
	</name>
	<email>freebsd@allanjude.com</email>
      </person>

      <person>
	<name>
	  <given>Benedict</given>
	  <common>Reuschling</common>
	</name>
	<email>bcr@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Warren</given>
	  <common>Block</common>
	</name>
	<email>wblock@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.allanjude.com/zfs_handbook/zfs.html">Preview ZFS Handbook</url>
      <url href="http://www.allanjude.com/talks/AsiaBSDCon_2014_-_WIP_-_ZFS_Handbook.pdf">Slides from AsiaBSDCon 2014</url>
    </links>

    <body>
      <p>ZFS is one of the premier features of &os;.  The current
	documentation in the Handbook and elsewhere online is severely
	lacking.  Much of the original documentation from Sun and
	Oracle has disappeared, moved, or is about the proprietary
	version of ZFS.</p>

      <p>New users have many questions about ZFS and yet there exists
	a great deal more bad advice about ZFS than proper
	documentation. The current ZFS chapter of the &os; Handbook
	starts off with the required steps to configure an i386
	machine to run ZFS.  This is more likely to scare off a new
	user than to educate them about how to properly use ZFS.</p>

      <p>At BSDCan&nbsp;2013, the process of writing an entirely new
	chapter of the Handbook on ZFS was started.  Currently this
	chapter consists of approximately 16,000 words covering all
	subcommands of the <tt>zpool(8)</tt> and <tt>zfs(8)</tt>
	utilities, delegation, tuning and a section devoted to
	definitions and explanations of the terms and features of
	ZFS.</p>

      <p>The remaining section is the FAQ, to help users address the
	most common problems they might run into with ZFS.  It would be
	useful to hear experiences, questions, misconceptions, gotchas,
	stumbling blocks, and suggestions for the FAQ section from other
	users.  Also, it would be good to have a use cases section that
	highlights some of the cases where ZFS provides advantages over
	traditional file systems.</p>

      <p>Please send suggestions to the <tt>freebsd-doc</tt> mailing
	list.</p>
    </body>

    <sponsor>ScaleEngine, Inc</sponsor>

    <help>
      <task>Technical review by Matt Ahrens (co-creator of
	ZFS).</task>
      <task>Improve delegation section.</task>
      <task>Improve tuning section, add new sysctls added in
	<tt>head</tt>.</task>
      <task>Add section on jails and the jailed property.</task>
      <task>Add FAQ section.</task>
      <task>Add <q>Use Cases</q> section.</task>
      <task>General editing and review.</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Release Engineering Team</title>

    <contact>
      <person>
	<name>&os; Release Engineering Team</name>
	<email>re@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/releases/9.3R/schedule.html">&os;&nbsp;9.3-RELEASE schedule</url>
      <url href="http://www.FreeBSD.org/releases/9.3R/todo.html">&os;&nbsp;9.3-RELEASE todo list</url>
      <url href="http://ftp.FreeBSD.org/pub/FreeBSD/snapshots/ISO-IMAGES/">&os;&nbsp;development snapshots</url>
    </links>

    <body>
      <p>The &os; Release Engineering Team is responsible for setting
	and publishing release schedules for official project releases
	of &os;, announcing code freezes and maintaining the
	respective branches, among other things.</p>

      <p>In early January, the team became aware of several
	last-minute showstopper issues in &os;&nbsp;10.0, which led
	to an extension in the final release builds.
	&os;&nbsp;10.0-RELEASE was announced on January 20, two months
	behind the original schedule.</p>

      <p>The schedule for the &os;&nbsp;9.3-RELEASE cycle has been
	written and posted to the website, and the release cycle will
	begin early May.</p>

      <p>There is ongoing work to integrate support for embedded
	architectures as part of the release build process.  At this
	time, support exists for a number of ARM kernels, in
	particular the Raspberry Pi, BeagleBone, and WandBoard.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='team'>
    <title>&os; Documentation Engineering Team</title>

    <contact>
      <person>
	<name>&os; Documentation Engineering Team</name>
	<email>doceng@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://lists.freebsd.org/pipermail/freebsd-doc/2014-February/023265.html">Announcement of Warren Block's addition</url>
    </links>

    <body>
      <p>The &os; Documentation Engineering Team is responsible for
	defining and following up on the documentation goals for the
	committers in the Documentation project.  The team is pleased to
	announce a new member &mdash; &a.wblock;.  In early March, the
	&os; Documentation Engineering Team members assumed
	responsibility for the &os; Webmaster Team.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>&os; Ada Ports</title>

    <contact>
      <person>
	<name>
	  <given>John</given>
	  <common>Marino</common>
	</name>
	<email>marino@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.dragonlace.net"/>
      <url href="http://www.spark-2014.org/about/">SPARK 2014</url>
    </links>

    <body>
      <p>Ada is a structured, statically typed, imperative,
	wide-spectrum, and object-oriented high-level computer
	programming language, extended from Pascal and other
	languages, originally targeted at embedded and real-time
	systems.  The number of Ada ports in the collection has grown
	significantly since the last report six months ago.  There are
	almost 50 Ada-related ports now, with new ones getting added
	all the time.</p>

      <p>The previous plan was to move from the GCC 4.7-based GNAT
	compiler to a GCC 4.8-based one, but finally GCC 4.8 was
	skipped and now a GCC 4.9-based GNAT is the standard Ada
	compiler, which fully supports the new ISO standard, Ada 2012.
	Moving to a newer compiler allowed several important ports
	like PolyOrb and GPRBuild to be upgraded to the latest
	available versions.  In fact, almost every Ada port is
	currently at its most recent upstream version.</p>

      <p>For non-Windows-based Ada development, &os; and DragonFly are
	now undisputed as the go-to platforms.  The other candidates are
	Debian and Fedora, but there are few Ada softwares on those
	platforms that are not also in the &os; ports tree, and the &os;
	versions are much newer.  The Ports Collection also features
	software not found anywhere else such as the USAFA's Ironsides
	DNS server, libsparkcrypto, matreshka, GNATDroid (Android
	cross-compiler) and several developer libraries.</p>

      <p>A desired addition to the Ada ports will be SPARK 2014 (see
	links), which should cement &os; as an option for
	professional, safety-critical application development.  This
	package should have its first release by early summer.</p>
    </body>
  </project>

  <project cat='ports'>
    <title>Xfce/&os;</title>

    <contact>
      <person>
	<name>
	  <given>&os; Xfce Team</given>
	</name>
	<email>xfce@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Xfce"/>
      <url href="https://svn.redports.org/olivierd/xfce4/">Development repository</url>
      <url href="https://people.freebsd.org/~olivierd/xfce-core-unstable.html"/>
      <url href="http://www.freebsd.org/cgi/query-pr.cgi?pr=183690">ports/183690</url>
    </links>

    <body>
      <p>Xfce is a free software desktop environment for Unix and
	Unix-like platforms, such as &os;.  It aims to be fast and
	lightweight, while still being visually appealing and easy to
	use.  The Xfce team continues to keep each piece of
	the Xfce Desktop up to date.</p>

      <p>The latest commits concerned:</p>

      <ul>
	<li>Applications:</li>

	<ul>
	  <li>Midori (0.5.7)</li>
	  <li>xfburn (0.5.0)</li>
	  <li>xfce4-parole (0.5.4)</li>
	  <li>xfce4-taskmanager (1.0.1)</li>
	  <li>xfce4-tumbler (0.1.30)</li>
	</ul>

	<li>Panel plugins:</li>

	<ul>
	  <li>xfce4-clipman-plugin (1.2.5)</li>
	  <li>xfce4-equake-plugin (1.3.4)</li>
	  <li>xfce4-wavelan-plugin (0.5.11)</li>
	  <li>xfce4-whiskermenu-plugin (1.3.2)</li>
	</ul>
      </ul>

      <p>We also follow development of core components (available in
	your repository).  See the links for documentation on how to
	upgrade those libraries.</p>

      <ul>
	<li>garcon (0.3.0)</li>
	<li>libxfce4menu (4.11.1)</li>
	<li>libxfce4util (4.11.0)</li>
	<li>xfce4-appfinder (4.11.0)</li>
	<li>xfce4-desktop (4.11.4)</li>
	<li>xfce4-dev-tools (4.11.0)</li>
	<li>xfce4-panel (4.11.0)</li>
	<li>xfce4-parole (0.6.0)</li>
	<li>xfce4-settings (4.11.2)</li>
	<li>xfce4-session (4.11.0)</li>
	<li>xfce4-wm (4.11.1)</li>
	<li>xfce4-xkb-plugin (0.7.0)</li>
      </ul>
    </body>

    <help>
      <task>Add support of DragonFly for xfce4-taskmanger.</task>

      <task>Finish replacing Tango icon theme with GNOME, in order to
	close <tt>ports/183690</tt> (see links, Midori remains to be
	fixed).</task>
    </help>
  </project>

  <project cat='kern'>
    <title>PCI SR-IOV Infrastructure</title>

    <contact>
      <person>
	<name>
	  <given>Ryan</given>
	  <common>Stone</common>
	</name>
	<email>rstone@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://github.com/rysto32/freebsd/tree/iov_ixgbe">Work in progress on GitHub</url>
    </links>

    <body>
      <p>PCI Single Root I/O Virtualization (SR-IOV) is an optional
	part of the PCIe standard that provides hardware acceleration
	for the virtualization of PCIe devices.  When SR-IOV is in
	use, a function in a PCI device (known as a Physical Function,
	or PF) will present multiple Virtual PCI Functions (VF) on the
	PCI bus. These VFs are fully independent PCI devices that have
	access to the resources of the PF.  For example, on a network
	interface card, VFs could transmit and receive packets
	independent of the PF.</p>

      <p>The most obvious use case for SR-IOV is virtualization.  A
	hypervisor like bhyve could instantiate a VF for every VM and
	use PCI passthrough to assign the VFs to the VMs.  This would
	allow multiple VMs to share access to the PCI device without
	having to do any expensive communication with the hypervisor,
	greatly increasing performance of performing I/O from a
	VM.</p>

      <p>There are two parts to this project.  The first is
	implementing an API in the PCI subsystem for creating VFs and
	configuring standard PCI features like BARs.  The second part
	is updating individual drivers for PCI devices that support
	SR-IOV to configure their VFs.  For example, a network
	interface driver will typically have to assign a MAC address
	to a VF and configure the interface to route packets destined
	for that MAC address to the VF.</p>

      <p>At this point only SR-IOV support for the <tt>ixgbe(4)</tt>
	driver is planned.  The PCI subsystem API is designed to be
	generic and should support SR-IOV on any device, but fairly
	extensive driver work is necessary to support SR-IOV, which is
	currently not planned due to lack of time and hardware.</p>

      <p>At present, <tt>ixgbe(4)</tt> is able to create VFs and the
	<tt>ixgbevf</tt> driver is able to pass traffic.  There is
	still a fair amount of work to support VLAN tags, multicast
	addresses, and other features on the VFs.  Also, the VF
	configuration needs to be better integrated with the PF
	initialization path to ensure that resets of the PF do not
	interrupt operation of the VFs.</p>
    </body>

    <sponsor>Sandvine, Inc</sponsor>
  </project>

  <project cat='bin'>
    <title>&os; Test Suite</title>

    <contact>
      <person>
	<name>
	  <given>Julio</given>
	  <common>Merino</common>
	</name>
	<email>jmmv@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://wiki.FreeBSD.org/TestSuite">Project page</url>
      <url href="http://kyua1.nyi.FreeBSD.org/">Testing cluster</url>
      <url href="http://julipedia.meroh.net/2014/01/freebsd-test-suite-goals-and-planning.html">Roadmap for the project</url>
      <url href="https://drive.google.com/a/meroh.net/#folders/0B08g-X1kPkSYNmlEdTB5RjlFbkk">AsiaBSDCon 2014 tutorial materials</url>
    </links>

    <body>
      <p>The &os; Test Suite project aims to equip &os; with a
	comprehensive collection of tests that are easy to run out of
	the box and during the development of the system.  The test
	suite is installed into <tt>/usr/tests/</tt> and the
	<tt>kyua(1)</tt> command-line tool (<tt>devel/kyua</tt> in the
	Ports Collection) is used to run them.  See the project page
	for more details.</p>

      <p>Since the last status report, we have been hard at work
	polishing the framework in many different areas.  The
	highlights are:</p>

      <ul>
	<li>A roadmap for the project has been prepared and published,
	  see links.</li>

	<li>Many tests have been added to the test suite thanks to the
	  work of various developers and, in particular, a good bunch
	  of old tests from <tt>src/tools/regression/</tt> have been
	  incorporated into the new test suite.  As of this writing,
	  there are 509 test cases continuously running.</li>

	<li>The testing infrastructure in the <tt>stable/10</tt>
	  branch has been synced to <tt>head</tt>.  It should now be
	  possible to seamlessly MFC changes to the stable branch
	  along with their tests, if any.</li>

	<li>The testing cluster, which only issued <tt>amd64</tt>
	  builds, has been extended to perform <tt>i386</tt> builds as
	  well.  Additionally, a canary machine has been put in place
	  so that changes to the cluster configuration can be properly
	  validated before deployment.</li>

	<li>A tutorial on Kyua and the &os; Test Suite was given at
	  AsiaBSDCon 2014.  The tutorial materials are available for
	  public consumption, please consult the links.</li>

	<li>Both Kyua's and ATF's upstream sites have been moved to
	  GitHub, mostly due to the discontinuation of file downloads
	  in Google Code.</li>
      </ul>
    </body>

    <help>
      <task>Enable the build of the test suite by default.</task>

      <task>Add alerting for failed or missing test runs from the
	testing cluster.</task>

      <task>Add bhyve support to the testing cluster for faster
	turnaround times.</task>

      <task>Simplify and improve Kyua HTML reports.  In particular,
	reports will be coalesced into single HTML files for easier
	management and will include more useful details for debugging.
	Such details are the revision at which the system was built, the
	date and duration of the whole run, or the list of installed
	packages, to mention a few examples.</task>

      <task>Add JUnit XML output to Kyua for better integration with
	Jenkins.  This work is actively ongoing and should be ready
	for prime time at BSDCan&nbsp;2014.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>OpenAFS on &os;</title>

    <contact>
      <person>
	<name>
	  <given>Benjamin</given>
	  <common>Kaduk</common>
	</name>
	<email>bjk@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://openafs.org">OpenAFS homepage</url>
    </links>

    <body>
      <p>AFS is a distributed network filesystem that originated from
	the Andrew Project at Carnegie-Mellon University.  OpenAFS is
	an open-source implementation of the AFS protocol derived from
	IBM AFS, which was released under the IBM Public License.
	OpenAFS on &os; (the <tt>net/openafs</tt> port) is suitable
	for light use, but is not yet production ready.</p>

      <p>We got a chance to pick up this porting project after some
	hiatus.  Recent work focused on investigating the bugs
	preventing the use of a disk cache for caching file data.  An
	internal "lookupname" abstraction was intended to return an
	unlocked, referenced vnode, but instead returned a locked,
	referenced vnode, leading to various failure modes depending
	on the number of kernel debugging options enabled.</p>
    </body>

    <help>
      <task>Track down an issue involving incorrect reference counts
	on the AFS root vnode that cause warnings on shutdown.</task>

      <task>Audit the locking in all the vnode operations code &mdash;
	it is expected that there remain some incorrectly locked
	areas, though none that present visible issues under light
	load.</task>
    </help>
  </project>

  <project cat='ports'>
    <title><tt>libvirt/bhyve</tt> Support</title>

    <contact>
      <person>
	<name>
	  <given>Roman</given>
	  <common>Bogorodskiy</common>
	</name>
	<email>novel@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://libvirt.org/drvbhyve.html">bhyve Driver</url>
      <url href="http://libvirt.org/">libvirt Home Page</url>
      <url href="http://empt1e.blogspot.ru/search/label/libvirt">Developer Blog</url>
    </links>

    <body>
      <p>Libvirt is a virtualization library providing a common API
	for various hypervisors (Qemu/KVM, Xen, LXC, and others), and
	also a popular library used by a number of projects.  Libvirt
	1.2.2, released on March, 2014, was the first release to
	include bhyve support.  Enabling bhyve support allows
	consumers to use bhyve in libvirt-ready applications without
	major efforts.</p>

      <p>Currently, libvirt supports almost all essential features of
	bhyve, such as Virtual Machine lifecycle (start, stop),
	bridged networking, and virtio/SATA driver support.  The work
	continues to implement more API calls and to cover more of
	features offered by bhyve.</p>
    </body>

    <help>
      <task>&os; port of <tt>netcf</tt> is needed for adding interface
	driver support to libvirt.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/arm64</title>

    <contact>
      <person>
	<name>
	  <given>Andrew</given>
	  <common>Turner</common>
	</name>
	<email>andrew@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://svnweb.freebsd.org/base/projects/arm64/">Project branch in the Subversion repository</url>
      <url href="https://github.com/zxombie/aarch64-freebsd-sandbox">GitHub repository</url>
    </links>

    <body>
      <p>Arm64 is the name of the in-progress port of &os; to the ARMv8
	CPU when it is in AArch64 mode.  Until recently, all ARM CPU
	designs were 32-bit only.  With the introduction of the ARMv8
	architecture, ARM has added a new 64-bit mode.  This new mode
	has been named AArch64.</p>

      <p>Progress has been good on getting &os; to build and run on
	the ARM Foundation model.  &os; is able to be built for this
	architecture, however, it requires a number of external tools
	including <tt>objdump(1)</tt> and <tt>ld(1)</tt>.  These tools
	are provided by an external copy of binutils until
	replacements can be written.</p>

      <p>&os; will run the early boot on the Foundation model.  The
	loader has been ported to the AArch64 UEFI environment and can
	load and run the kernel.  The kernel is able to create the
	initial page tables to be able to run from virtual memory.  It
	can then execute C code to parse the memory map provided by
	the loader.  This is as far as the kernel currently boots.</p>

      <p>This work is now happening in the &os; Subversion repository
	in a project branch, see the links.</p>
    </body>

    <help>
      <task>Implement an initial <tt>pmap(9)</tt> layer.</task>
      <task>Write the missing machine-dependent code.</task>
      <task>Test on real hardware.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os;/armv6hf</title>

    <contact>
      <person>
	<name>
	  <given>Andrew</given>
	  <common>Turner</common>
	</name>
	<email>andrew@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>&os; has been updated to allow it to use the VFP variant of
	the ARM EABI ABI.  The VFP unit is the ARM hardware to perform
	floating-point operations.  This changes the ABI to improve
	the performance of code that uses floating-point operations.
	By default, &os; already uses the ARM EABI on all releases
	from 10.0.</p>

      <p>This is important for &os;/arm users running code with
	floating-point operations on ARMv6 or ARMv7 SoC systems.  It
	removes the need for the slow software floating-point support
	in <tt>libc</tt>.  This is mostly compatible with the existing
	ABI, with the exception of how floating-point values are
	passed into functions.  Because no floating-point values are
	passed to the kernel, the <tt>armv6</tt> and <tt>armv6hf</tt>
	kernels will work with either userland.</p>

      <p>As part of this change, some support functions have been
	updated to use the VFP unit when available.  The existing
	<tt>armv6</tt> target architecture will be kept for cases
	where the SoC lacks a VFP unit, or existing binaries that are
	incompatible with the new ABI.</p>
    </body>

    <help>
      <task>Testing.</task>
      <task>More testing.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>Using CentOS 6.5 as Linux Base</title>

    <contact>
      <person>
	<name>
	  <given>Johannes</given>
	  <common>Meixner</common>
	</name>
	<email>xmj@chaot.net</email>
      </person>
    </contact>

    <links>
      <url href="http://github.com/xmj/linux-ports">Work in Progress</url>
      <url href="http://www.freebsd.org/cgi/query-pr.cgi?pr=ports/187786">ports/187786</url>
    </links>

    <body>
      <p>The Linux emulation layer relies on a Linux base distribution
	along with Linux ports of relevant non-base software.  Fedora
	10 was imported in 2006, and it shows &mdash; current Linux
	software like Skype 4, Sublime Text 2, or even modern games
	fail to run with the provided libraries.</p>

      <p>CentOS 6.5 was released in December 2013 and will be
	supported until 2017, making it an ideal basis for an update
	to the ports infrastructure.  Built upon the work of Carlos
	Jacobo Puga Medina, all ports using Linux have been updated to
	work with either Fedora 10 or CentOS 6.5.</p>

      <p>The goal of this project is to make CentOS 6.5 the default
	Linux distribution, so that &os; users can enjoy running
	modern Linux binaries without having to resort to
	virtualization &agrave; la VirtualBox, or even
	dual-booting.</p>
    </body>

    <sponsor>Goldener Grund OÜ</sponsor>

    <help>
      <task>Clean up <tt>Mk/bsd.linux-*.mk</tt> and fix errors
	detected in <tt>ports/187786</tt>.</task>

      <task>Revert making c6 the default (in the git
	repository).</task>

      <task>Testing.</task>

      <task>Review patches and import into the ports tree (any help
	appreciated).</task>

      <task>Make c6 the default (after sufficient testing) within the
	ports tree.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>ASLR and PIE</title>

    <contact>
      <person>
	<name>
	  <given>Shawn</given>
	  <common>Webb</common>
	</name>
	<email>lattera@gmail.com</email>
      </person>

      <person>
	<name>
	  <given>Olivér</given>
	  <common>Pintér</common>
	</name>
	<email>oliver.pntr@gmail.com</email>
      </person>
    </contact>

    <links>
      <url href="http://0xfeedface.org/blog/lattera/2014-04-03/awesome-freebsd-aslr-progress">Blog post with latest status update</url>
      <url href="https://github.com/lattera/freebsd/tree/soldierx/lattera/aslr">Shawn's ASLR branch</url>
      <url href="https://github.com/opntr/opBSD/tree/op/stable/10-aslr">Olivér's ASLR branch</url>
    </links>

    <body>
      <p>Address space layout randomization (ASLR) is a computer
	security technique involved in protection from buffer overflow
	attacks.  In order to prevent an attacker from reliably
	jumping to a particular exploited function in memory, ASLR
	involves randomly arranging the positions of key data areas of
	a program, including the base of the executable and the
	positions of the stack, heap, and libraries, in a process'
	address space.</p>

      <p>We have added ASLR support to all architectures.  As the
	primary developers behind this feature have the most access to
	<tt>amd64</tt>, the focus of development is on the
	<tt>amd64</tt> architecture.  Other architectures, such as
	ARM, have known bugs with our current ASLR implementation and
	we are working hard to fix them.  We added support for
	Position-Independent Executables (PIEs) in a number of
	applications in base.</p>
    </body>

    <help>
      <task>Shawn has access to a Raspberry Pi (RPI).  PIE is 90%
	broken.  Debug and fix major issues on the RPI.  The existing
	NX stack protections are not obeyed on RPI.  Properly
	implemented ASLR requires a NX stack.</task>

      <task>Shawn will be receiving a <tt>sparc64</tt> box on April 6,
	2014.  He will test ASLR on <tt>sparc64</tt>, identifying and
	fixing any bugs that pop up.</task>

      <task>Olivér has identified one or more bugs with the
	Linuxulator.  He will be looking into that and fixing
	those.</task>

      <task>Shawn will be cleaning up code and adding support for PIE to
	more applications in base.  He will also add PIE support to the
	ports framework for general consumption.</task>

      <task>Shawn will be giving a presentation regarding ASLR at
	BSDCan&nbsp;2014.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>UEFI Boot</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/UEFI">Project page on the wiki</url>
    </links>

    <body>
      <p>The Unified Extensible Firmware Interface (UEFI) provides
	boot- and run-time services for x86 computers, and is a
	replacement for the legacy BIOS.  This project will adapt the
	&os; loader and kernel boot process for compatibility with
	UEFI firmware, found on contemporary servers, desktops, and
	laptops.</p>

      <p>Starting with &a.rpaulo;'s <tt>i386</tt> EFI loader,
	&a.benno; developed a working proof-of-concept <tt>amd64</tt>
	loader in 2013 under sponsorship from the &os; Foundation.
	After refinement, that work has now been merged from the
	<tt>projects/uefi</tt> Subversion branch into &os;
	<tt>head</tt>.  The project includes the infrastructure to
	build a UEFI-enabled loader, and the kernel-side changes to
	parse metadata provided by the loader.</p>

      <p>A number of integration tasks remain, with a plan to have
	UEFI installation and boot support merged to
	<tt>stable/10</tt> in time for &os; 10.1-RELEASE.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>

    <help>
      <task>Document manual installation, including dual-boot
	configurations.</task>

      <task>Implement chain-loading from UFS/ZFS file systems.</task>
      <task>Integrate UEFI configuration with the &os;
	installer.</task>
      <task>Support secure boot.</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Cluster Administration Team</title>

    <contact>
      <person>
	<name>&os; Cluster Administration Team</name>
	<!-- email intentionally left incomplete -->
	<email>admins@</email>
      </person>
    </contact>

    <body>
      <p>The &os; Cluster Administration Team consists of the people
	responsible for administering the machines that the project
	relies on for its distributed work and communications to be
	synchronised.  In this quarter, the team has worked on the
	following:</p>

      <ul>
	<li>Assimilated master email configurations into a single
	  source control repository.</li>

	<li>Moved the &os; web server CGI services to a new location
	  (sponsored).</li>

	<li>Further enhanced upon our internal monitoring
	  utilities.</li>

	<li>Added a Russian <tt>pkg(8)</tt> mirror, hosted by
	  Yandex.</li>

	<li>Moved the &os;&nbsp;Foundation web services to a new
	  server (sponsored).</li>
      </ul>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='ports'>
    <title>KDE/&os;</title>

    <contact>
      <person>
	<name>KDE/&os; Team</name>
	<email>kde@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://FreeBSD.kde.org">KDE/&os; Home Page</url>
      <url href="http://FreeBSD.kde.org/area51.php">area51</url>
      <url href="http://portscout.freebsd.org/kde@freebsd.org.html">PortScout Status</url>
    </links>

    <body>
      <p>KDE is an international free software community producing an
	integrated set of cross-platform applications designed to run
	on Linux, &os;, Solaris, Microsoft Windows, and OS X systems.
	The KDE/&os; Team have continued to improve the experience of
	KDE software and Qt under &os;.</p>

      <p>During this quarter, the team has kept most of the KDE and Qt
	ports up-to-date, working on the following releases:</p>

      <ul>
	<li>KDE SC: 4.12.2, 4.12.3, and 4.12.4; Workspace: 4.11.6,
	  4.11.7, and 4.11.8</li>
	<li>Qt: 5.2.1</li>
	<li>KDevelop: 4.6.0</li>
	<li>Digikam (and KIPI-plugins): 3.5.0</li>
      </ul>

      <p>As a result &mdash; according to PortScout &mdash;
	<tt>kde@</tt> has 526 ports (up from 464), of which 98.86% are
	up-to-date (up from 88.15%).  iXsystems continues to provide a
	machine for the team to build packages and to test updates.
	They have been providing the KDE/&os; team with support for
	quite a long time and we are very grateful for that.</p>

      <p>A major change has been the deprecation of the KDE3 ports and
	the move of the <tt>KDE4_PREFIX</tt> to <tt>LOCALBASE</tt>.
	Also, work on Qt5 continues to maturity.  &a.rakuco; has been
	working with upstream to ensure Baloo (Nepomuk successor in
	KDE SC 4.13) compiles and runs on non-Linux systems.  His work
	not only benefits &os; but other BSDs and OS X.</p>

      <p>As usual, the team is always looking for more testers and
	porters, so please contact us and visit our home page (see
	links).  It would be especially useful to have more helping
	hands on tasks such as getting rid of the dependency on the
	defunct HAL project and providing integration with KDE's
	Bluedevil Bluetooth interface.</p>
    </body>

    <sponsor>iXsystems, Inc</sponsor>

    <help>
      <task>Update out-of-date ports, see PortScout for a list.</task>
      <task>Work on Qt 5.</task>

      <task>Make sure the whole KDE stack (including Qt) builds and
	works correctly with Clang and <tt>libc++</tt>.</task>
      <task>Remove the dependency on HAL.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>Wine/&os;</title>

    <contact>
      <person>
	<name>
	  <given>Gerald</given>
	  <common>Pfeifer</common>
	</name>
	<email>gerald@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>David</given>
	  <common>Naylor</common>
	</name>
	<email>dbn@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://wiki.FreeBSD.org/Wine">Wine Wiki Page</url>
      <url href="http://wiki.FreeBSD.org/i386-Wine">Wine on amd64 Wiki Page</url>
      <url href="http://www.winehq.org/">Wine Home Page</url>
    </links>

    <body>
      <p>Wine is a free and open source software application that aims
	to allow applications designed for Microsoft Windows to run on
	Unix-like operating systems, such as &os;.  The Wine project
	has been in maintenance mode this quarter and has updated the
	ports for the following versions:</p>

      <ul>
	<li>Stable releases: 1.6.2</li>
	<li>Development releases: 1.7.9 through 1.7.15</li>
      </ul>

      <p>The ports have packages built for <tt>amd64</tt>, available
	through the ports <tt>emulators/i386-wine</tt> and
	<tt>emulators/i386-wine-devel</tt>.</p>
    </body>

    <help>
      <task>See the <q>Open Tasks</q> and <q>Known Problems</q>
	sections on the Wine wiki page.</task>

      <task>&os;/<tt>amd64</tt> integration, consult the i386-Wine
	wiki page for the details.</task>

      <task>Port WoW64 (supporting Windows 32-bit and 64-bit from the
	same port) and Wine64.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>&os; on Chromebook</title>

    <contact>
      <person>
	<name>
	  <given>Ruslan</given>
	  <common>Bukin</common>
	</name>
	<email>br@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/FreeBSD/arm/Chromebook">Manual</url>
    </links>

    <body>
      <p>One model of Chromebook is an ARMv7 Cortex-A15 personal
	computer powered by a Samsung Exynos 5 Dual System-on-Chip.  As of
	the current status of this project, such laptops can be booted
	with &os; from USB flash &mdash; it works stably (including SMP)
	and it can build third-party applications.  The display and
	keyboard work.</p>

      <p>Thanks to &a.grehan; for providing hardware.</p>
    </body>

    <help>
      <task>Implement keyboard polling mode.</task>

      <task>Add support for the upcoming second generation of
	Chromebook.</task>

      <task>Write SD, SATA drivers.</task>
    </help>
  </project>

  <project cat='proj'>
    <title>Jenkins Continuous Integration for &os;</title>

    <contact>
      <person>
	<name>
	  <given>Craig</given>
	  <common>Rodrigues</common>
	</name>
	<email>rodrigc@FreeBSD.org</email>
      </person>

      <person>
	<name>Jenkins Administrators</name>
	<email>jenkins-admin@FreeBSD.org</email>
      </person>

      <person>
	<name>&os; Testing</name>
	<email>freebsd-testing@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://jenkins.FreeBSD.org">Jenkins CI server in &os; cluster</url>
      <url href="https://wiki.freebsd.org/Jenkins#Jenkins_for_FreeBSD_status">Jenkins on &os; project status</url>
      <url href="https://wiki.freebsd.org/Jenkins#Presentations_and_Working_Groups">Video and slides of March 13, 2014 presentation at Bay Area &os; User Group (BAFUG)</url>
      <url href="http://empt1e.blogspot.ru/2014/03/using-jenkins-libvirt-slave-plugin-with.html">Jenkins, libvirt, and bhyve</url>
      <url href="http://jenkins-ci.org">Jenkins Continuous Integration</url>
      <url href="http://www.ansible.com">Ansible</url>
    </links>

    <body>
      <p>Jenkins is a framework used by many companies and open
	source projects for Continuous Integration (CI).  CI allows
	developers to commit code to a Source Code Management (SCM)
	system such as Subversion, and then have automated programs
	check out, build, and test the code.  Jenkins is implemented
	in the Java language.</p>

      <p>&a.emaste; reviewed some CI work that &a.rodrigc; had done
	for the FreeNAS project with Jenkins, and encouraged him to
	set up something similar for the &os; Project.  With the help
	of the &os; Cluster Administration Team, he set up a &os;
	machine running two bhyve virtual machines,
	<tt>jenkins-9.FreeBSD.org</tt> and
	<tt>jenkins-10.FreeBSD.org</tt>.  He set up software builds of
	<tt>head</tt> and several <tt>stable</tt> branches on these
	machines.  The status of these builds is visible on a web
	interface accessible at <tt>jenkins.FreeBSD.org</tt>.  When
	any of the builds fail, emails are sent to
	<tt>freebsd-current</tt> or <tt>freebsd-stable</tt>.  Emails
	are also sent directly to the list of people who recently
	committed code to Subversion since the last successful
	build.</p>

      <p>As part of the Jenkins setup, &a.rodrigc; encountered
	problems with running Java on &os;&nbsp;9.2 and
	&os;&nbsp;10.0.  Both problems stemmed from changes to the
	&os; Virtual Memory (VM) subsystem.  On &os; 9.2-RELEASE,
	running Jenkins under Java would cause the kernel to panic.
	This was a known problem, and fixed in 9.2.-RELEASE-p3.  On
	&os; 10.0-RELEASE, Java processes would randomly crash.
	Disabling the <tt>vm.pmap.pcid_enabled</tt> <tt>sysctl(3)</tt>
	variable seemed to fix the problem.  In <tt>kern/187238</tt>,
	Henrik Gulbrandsen submitted fixes to the &os; VM to address
	this problem.  &a.kib; committed the fixes to <tt>head</tt>,
	where they are being tested now.</p>

      <p>During the setup of the bhyve VMs which run Jenkins
	processes, &a.rodrigc; wrote scripts to start bhyve VMs from
	the <tt>rc.d</tt> bootup scripts, which were then published at
	GitHub.</p>

      <p>On February 19, 2014, &a.rodrigc; notified the &os;
	developers that Jenkins was running in the &os; cluster, and
	that they could look at the web interface to see the status of
	builds.</p>

      <p>On March 13, 2014, &a.rodrigc; gave a presentation of the
	Jenkins work at the Bay Area &os; User Group (BAFUG) in
	Mountain View, California, USA.  Video of the presentation was
	recorded and put online by iXsystems.</p>

      <p>&a.rodrigc; assembled a team of volunteers,
	<tt>jenkins-admin</tt>, to help maintain
	<tt>jenkins.FreeBSD.org</tt> and expand the use of Jenkins CI
	used in the &os; cluster.  <tt>jenkins-admin</tt> consists of
	the following people working in the following areas:</p>

      <ul>
	<li>R. Tyler Croy is both a &os; developer and a Jenkins
	  developer.  He will be working on fixing bugs in Jenkins
	  specific to &os;.  He is first looking at fixing the
	  libpam4j library which is used by Jenkins to interface with
	  the PAM system for user authentication.  The released
	  version of libpam4j does not currently work on &os;.</li>

	<li>&a.lwhsu; maintains the <tt>devel/jenkins</tt> port.  He
	  set up a Jenkins build which runs the scan-build static
	  analyzer which is part of LLVM.</li>

	<li>&a.skreuzer; has experience administering Jenkins systems.
	  He set up several builds on <tt>jenkins.FreeBSD.org</tt>,
	  including a Jenkins build of the &os; documentation.  He is
	  looking into using Ansible for automatic provisioning of VMs
	  running Jenkins in the &os; cluster.</li>

	<li>&a.rodrigc; will be running a Continuous Testing working
	  group at the &os; Devsummit in Ottawa on May 15, 2014.  He
	  will also give a Jenkins presentation on May 17, 2014.  He
	  is interested in working with &a.jmmv; to integrate Jenkins
	  and Kyua.  They have exchanged some emails about this on the
	  <tt>freebsd-testing</tt> list.</li>

	<li>&a.swills; maintains the <tt>devel/jenkins-lts</tt> port.
	  He has implemented several builds at
	  <tt>jenkins.FreeBSD.org</tt> which detect commits to the
	  &os; ports repository, and then build the ports tree using
	  Poudrière.</li>
      </ul>

      <p>At the end of March, &a.novel; reported to
	<tt>jenkins-admin</tt> that he has successfully run the
	Jenkins libvirt plugin with his libvirt modifications to
	integrate with bhyve.  He provided a link to a blog posting
	where he described his experience.</p>
    </body>

    <sponsor>iXsystems, Inc</sponsor>

    <help>
      <task>Obtain certificates for LDAP and web servers, to replace
	self-signed certificates.</task>

      <task>Set up more Jenkins builds of the &os; base repository on
	different branches and with different configurations.</task>

      <task>Set up more Jenkins builds of the &os; ports repository on
	different &os; versions.</task>

      <task>Integrate with Kyua, so that Jenkins can run Kyua tests
	and report the results directly in the native Jenkins web UI
	where test results are reported.</task>

      <task>Write scripts which can take a Jenkins build of &os;, and
	boot the results in a bhyve VM or on real hardware.</task>

      <task>Fix libpam4j on &os;.</task>

      <task>Continuous Testing working group at Devsummit on May 15,
	2014</task>

      <task>Jenkins presentation at BSDCan on May 17, 2014</task>
    </help>
  </project>

  <project cat='kern'>
    <title>Native iSCSI Stack</title>

    <contact>
      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napierała</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Native%20iSCSI%20target"/>
    </links>

    <body>
      <p>The new &os; in-kernel iSCSI stack was functionally complete
	in &os; 10.0-RELEASE, but ongoing enhancements and bug fixes
	are being committed to &os; <tt>head</tt>, with a plan to
	merge them back to <tt>stable/10</tt> in time for &os;
	10.1-RELEASE.</p>

      <p>Many issues have been resolved, including very slow operation
	with data digests enabled, bugs in persistent reservations
	which impacted Hyper-V Failover Cluster, and a negotiation
	problem affecting Dell Equallogic users.</p>

      <p>There have also been numerous enhancements, such as support
	for redirections, which are necessary for some High
	Availability setups, and the ability to modify session
	parameters in the iscsictl utility.  Previously it was
	necessary to remove the session and add it again.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='kern'>
    <title>Updated <tt>vt(4)</tt> System Console</title>

    <contact>
      <person>
	<name>
	  <given>Aleksandr</given>
	  <common>Rybalko</common>
	</name>
	<email>ray@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Ed</given>
	  <common>Schouten</common>
	</name>
	<email>ed@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Newcons">Project wiki page</url>
    </links>

    <body>
      <p><tt>vt(4)</tt> is a modern replacement for the existing,
	quite old, virtual terminal emulator called
	<tt>syscons(4)</tt>. Initially motivated by the lack of
	Unicode support and infrastructural issues in
	<tt>syscons(4)</tt>, the project was later expanded to cover
	the new requirement to support Kernel Mode Setting (KMS).</p>

      <p>The project is now in <tt>head</tt>, <tt>stable/10</tt> and
	<tt>stable/9</tt> branches.  Hence, <tt>vt(4)</tt> can be
	tested by using the <tt>VT</tt> kernel configuration
	(<tt>i386</tt> and <tt>amd64</tt>) or by replacing two lines
	in the <tt>GENERIC</tt> kernel configuration file:</p>

      <pre>device sc
device vga</pre>

      <p>with the following ones:</p>

      <pre>device vt
device vt_vga</pre>

      <p>Or, to use for UEFI testing, add the following lines
	instead:</p>

      <pre>device vt
device vt_efifb</pre>

      <p>Major highlights:</p>

      <ul>
	<li>Unicode support.</li>
	<li>Double-width character support for CJK characters.</li>
	<li><tt>xterm(1)</tt>-like terminal emulation.</li>
	<li>Support for Kernel Mode Setting (KMS) drivers
	  (<tt>i915kms</tt>, <tt>radeonkms</tt>).</li>
	<li>Support for different fonts per terminal window.</li>
	<li>Simplified drivers.</li>
      </ul>

      <p>Brief status of supported architectures and hardware:</p>

      <ul>
	<li>amd64 (VGA/<tt>i915kms</tt>/<tt>radeonkms</tt>) &mdash;
	  works.</li>
	<li>ARM framebuffer &mdash; works.</li>
	<li>i386 (VGA/<tt>i915kms</tt>/<tt>radeonkms</tt>) &mdash;
	  works.</li>
	<li>IA64 &mdash; untested.</li>
	<li>MIPS &mdash; untested.</li>
	<li>PPC and PPC64 &mdash; work, but without X.Org yet.</li>
	<li>SPARC &mdash; works on certain hardware (e.g., Ultra
	  5).</li>
	<li><tt>vesa(4)</tt> &mdash; in progress.</li>
	<li>i386/amd64 nVidia driver &mdash; not supported.  VGA
	  should be used (VESA planned).</li>
	<li>Xbox framebuffer driver &mdash; will be deleted as
	  unused.</li>
      </ul>
    </body>

    <sponsor>The &os; Foundation</sponsor>

    <help>
	<task>Create sub-directories for <tt>vt(4)</tt> under
	  <tt>/usr/share/</tt> to store key maps and fonts.</task>

	<task>Implement the remaining features supported by
	  <tt>vidcontrol(1)</tt>.</task>

	<task>Write the <tt>vt(4)</tt> manual page.  (This is in
	  progress.)</task>

	<task>Support direct handling of keyboard by the <tt>kbd</tt>
	  device (without <tt>kbdmux(4)</tt>).</task>

	<task>CJK fonts.  (This is in progress).</task>
	<task>Address performance issues on some architectures.</task>
	<task>Switch to <tt>vt(4)</tt> by default.</task>
    </help>
  </project>

  <project cat='kern'>
    <title>New Automounter</title>

    <contact>
      <person>
	<name>
	  <given>Edward Tomasz</given>
	  <common>Napierała</common>
	</name>
	<email>trasz@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The automount project is nearing the functional prototype
	stage, and a call for testing is expected in the next month.
	The userspace portion consists of the <tt>automountd(8)</tt>
	daemon, which is designed to be fully compatible with its
	counterparts in OS X, Solaris, and Linux, and which is nearly
	complete.  Work on the kernel component continues.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='arch'>
    <title>&os; Host Support for OpenStack and OpenContrail</title>

    <contact>
      <person>
	<name>
	  <given>Grzegorz</given>
	  <common>Bernacki</common>
	</name>
	<email>gjb@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Michał</given>
	  <common>Dubiel</common>
	</name>
	<email>md@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Dominik</given>
	  <common>Ermel</common>
	</name>
	<email>der@semihalf.com</email>
      </person>

      <person>
	<name>
	  <given>Rafał</given>
	  <common>Jaworowski</common>
	</name>
	<email>raj@semihalf.com</email>
      </person>
    </contact>

    <links>
      <url href="http://www.openstack.org"/>
      <url href="http://www.opencontrail.org"/>
      <url href="https://github.com/Semihalf/openstack-devstack"/>
      <url href="https://github.com/Semihalf/openstack-nova"/>
      <url href="https://github.com/Semihalf/contrail-vrouter"/>
      <url href="https://blueprints.launchpad.net/nova/+spec/freebsd-compute-node"/>
    </links>

    <body>
      <p>OpenStack is a cloud operating system that controls large
	pools of compute, storage, and networking resources in a data
	center.  OpenContrail is a network virtualization (SDN)
	solution comprising a network controller, virtual router, and
	analytics engine, which can be integrated with cloud
	orchestration systems like OpenStack or CloudStack.</p>

      <p>The goal of this work is to make &os; a fully supported
	compute host for OpenStack using OpenContrail virtualized
	networking.  The main areas of development are:</p>

      <ul>
	<li>Libvirt hypervisor driver for bhyve.</li>

	<li>Support for bhyve (via the libvirt compute driver) and the
	  &os; platform in overall in <tt>nova-compute</tt>.</li>

	<li>Port OpenContrail vRouter (forwarding plane kernel module)
	  to &os;.</li>

	<li>Port OpenContrail Agent (network controller node) to
	  &os;.</li>

	<li>Integration, performance optimization.</li>
      </ul>

      <p>The current state of development allows for a working demo
	of OpenStack with compute node component running on a &os;
	host:</p>

      <ul>
	<li>The native bhyve hypervisor is driven by a
	  <tt>nova-compute</tt> component for spawning guest instances
	  using libvirt and a <tt>nova-network</tt> component for
	  providing simple networking using bridges between guest
	  VMs.</li>

	<li>QEMU might also be used instead of bhyve this way.</li>

	<li>The main goal on the networking side is to use the
	  OpenContrail solution, compliant with the modern OpenStack
	  networking API ("neutron").</li>
      </ul>

      <p>Also, an initial port of the OpenContrail vRouter kernel
	module has been completed.  It successfully handles all
	networking on the host.</p>
    </body>

    <sponsor>Juniper Networks</sponsor>
  </project>

  <project cat='kern'>
    <title>Intel GPU Driver Update</title>

    <contact>
      <person>
	<name>
	  <given>Konstantin</given>
	  <common>Belousov</common>
	</name>
	<email>kib@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The project to update the Intel graphics chipset driver
	(<tt>i915kms</tt>) to a recent snapshot of the Linux upstream
	code continues.  Progress was delayed by external
	circumstances, but it is hoped to reach a useful milestone in
	the near future.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='arch'>
    <title>SMP on Multi-Core ARM Systems</title>

    <contact>
      <person>
	<name>
	  <given>Ian</given>
	  <common>Lepore</common>
	</name>
	<email>ian@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Olivier</given>
	  <common>Houchard</common>
	</name>
	<email>cognet@ci0.org</email>
      </person>

      <person>
	<name>
	  <given>Wojciech</given>
	  <common>Macek</common>
	</name>
	<email>wma@semihalf.com</email>
      </person>
    </contact>

    <links>
      <url href="http://lists.freebsd.org/pipermail/freebsd-arm/2014-April/007886.html">Announcement</url>
    </links>

    <body>
      <p>&os; now supports Symmetrical MultiProcessing (SMP) on a
	variety of ARM multi-core systems.  The effort to bring SMP to
	ARM has been underway for quite some time, but a major push by
	the &os; ARM developer community over the past two months has
	resulted in robust production-ready SMP support.</p>

      <p>An ever-growing number of ARM-based development boards and
	small low-power computer systems are available with multi-core
	processors.  &os; is now able to make good use of all that
	computing power, making such systems more attractive to both
	end users and vendors looking to create products based on
	similar designs.</p>

      <p>As of r264138 in &os; <tt>head</tt>, SMP is now enabled by
	default in the configuration files for all currently-supported
	systems that have multi-core processors.  This includes
	systems based on the following processor families:</p>

      <ul>
	<li>Allwinner A20</li>
	<li>Freescale i.MX6</li>
	<li>Marvell Armada XP</li>
	<li>Samsung Exynos 5</li>
	<li>Texas Instruments OMAP4</li>
      </ul>

      <p>We plan to merge this work to <tt>stable/10</tt> in time for
	10.1-RELEASE.</p>
    </body>

    <sponsor>Microsemi, Inc.</sponsor>
    <sponsor>Semihalf sp.j</sponsor>
  </project>

  <project cat='misc'>
    <title>The &os; Foundation</title>

    <contact>
      <person>
	<name>
	  <given>Deb</given>
	  <common>Goodkin</common>
	</name>
	<email>deb@FreeBSDFoundation.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSDFoundation.org/"/>
      <url href="http://freebsdjournal.com/">&os; Journal</url>
    </links>

    <body>
      <p>The &os; Foundation is a 501(c)(3) non-profit organization
	dedicated to supporting and promoting the &os; Project and
	community worldwide.  Most of the funding is used to support
	&os; development projects, conferences and developer summits,
	purchase equipment to grow and improve the &os;
	infrastructure, and provide legal support for the Project.</p>

      <p>We published the first issue of the &os; Journal, our new
	on-line &os; magazine. The positive feedback from both the
	&os; and outside communities has been incredible.  This
	quarter we began work on articles and promotion for the second
	issue.  We also started working on a dynamic version of the
	magazine that can be read in many web browsers including those
	that run on &os;.</p>

      <p>This year we are earmarking more funding towards &os;
	advocacy and education.  You will see more literature, white
	papers, articles, and so on to help promote &os;.</p>

      <p>The Foundation held a board meeting in Berkeley, California,
	in January.  We discussed longer term strategy and planning
	for the year.  We put together our 2014 budget with a plan of
	raising at least $1,000,000 and spending $900,000.</p>

      <p>Two Foundation funded projects were completed.  The first,
	co-sponsored by Google, integrated the Casper daemon into
	&os;. The second was <tt>auditdistd(8)</tt> improvements for
	the &os; cluster.</p>

      <p>Work continued on these Foundation-sponsored projects: Intel
	graphics driver update by &a.kib;, UEFI boot support for
	<tt>amd64</tt> by &a.emaste;, autofs automounter and in-kernel
	iSCSI stack enhancements and bug fixes by &a.trasz;, and updated
	<tt>vt(4)</tt> system console by &a.ray;.  A more detailed
	project update for each of the above projects can be found
	within this quarterly status report.</p>

      <p>We were a Gold Sponsor for NYCBSDCon&nbsp;2014 in New York,
	February 8, which was attended by several board members.  We
	were represented at SCALE in Los Angeles, February 22-23, and
	ICANN in Singapore, March 22-25.</p>

      <p>We were a sponsor for AsiaBSDCon in Tokyo, March 15-16.
	Board member &a.hrs; was the conference organizer.  Board
	members &a.mckusick; and &a.gnn; taught tutorials and Kirk
	gave a keynote.  Board member &a.dru; manned the foundation
	table and spoke at one of the sessions.</p>

      <p>We became a Gold+ sponsor for BSDCan&nbsp;2014, May 16-17 and
	have started reaching out to vendors to attend the developer
	summit that runs in the two days before BSDCan.</p>

      <p>Board members George, Kirk, and &a.rwatson; pushed to finish
	the final draft of the next edition of their book <q>The
	Design and Implementation of the FreeBSD Operating
	System</q>.</p>

      <p>ITWire editor Sam Varghese published an interview with Kirk
	and Foundation technical manager &a.emaste; about the status
	of secure boot on &os;.</p>

      <p>The &os; Logo is now officially a registered trademark to
	represent the &os; operating system.  We are working to expand
	the registration beyond just the &os; operating system, but
	currently still have to use the <q>TM</q> symbol when using it
	on apparel and other non-operating-system items.  We continued
	reviewing requests and granting permission to use &os;
	trademarks.</p>

      <p>After finishing the 10.0-RELEASE, Foundation system
	administrator and release engineer &a.gjb; began work on
	adding support for &os;/arm image builds as part of the
	release build process.  As a result of this work, &os;/arm
	images are produced as part of the weekly development snapshot
	builds, and are available from any of the &os; FTP mirrors.
	Supported kernel configurations currently include
	<tt>BEAGLEBONE</tt>, <tt>RPI-B</tt>, <tt>PANDABOARD</tt>,
	<tt>WANDBOARD-QUAD</tt>, and <tt>ZEDBOARD</tt>.</p>

      <p>George visited six large &os; users in the Bay Area in
	February.  These meetings are conducted to help facilitate
	collaboration between &os; customers and the &os; Project.  It
	is an opportunity to exchange information on what the
	customers are doing and what is being worked on in the
	Project.  It is also an opportunity to try to connect
	customers with the appropriate &os; developers who may be
	working on areas of &os; that interest these customers.</p>
    </body>
  </project>

  <project cat='bin'>
    <title>LLDB Debugger Port</title>

    <contact>
      <person>
	<name>
	  <given>Ed</given>
	  <common>Maste</common>
	</name>
	<email>emaste@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.FreeBSD.org/lldb"/>
    </links>

    <body>
      <p>LLDB is the debugger project associated with Clang/LLVM.  It
	supports the Mac OS X, Linux, and &os; platforms, with ongoing
	work on Windows.  It builds on existing components in the larger
	LLVM project, for example using Clang's expression parser and
	LLVM's disassembler.</p>

      <p>The majority of work since the last status update has been on
	bugfixes and implementation of the remaining functionality
	missing on &os;.  Most of these improvements are now in the LLDB
	snapshot in the base system, which has been updated to upstream
	Subversion revision r202189.  Some highlights of the new update
	include:</p>

      <ul>
	<li>Improvements to the remote GDB protocol client.</li>
	<li>Bug fixes for big-endian targets.</li>
	<li>Initial support for libdispatch (GCD) queues in the
	  debuggee.</li>
	<li>Add "step-avoid-libraries" setting.</li>
	<li>IO subsystem improvements (including initial work on a
	  curses GUI).</li>
	<li>Support hardware watchpoints.</li>
	<li>Improved unwinding through hand-written assembly
	  functions.</li>
	<li>Handle DW_TAG_unspecified_parameters for variadic
	  functions.</li>
	<li>Fix Ctrl+C interrupting a running inferior process.</li>
	<li>Various bug fixes for memory leaks, LLDB segfaults, the
	  C++ demangler, ELF core files, DWARF debug info, and
	  others.</li>
      </ul>

      <p>LLDB is currently not yet built by default and may be enabled
	by adding <tt>WITH_LLDB=</tt> to <tt>src.conf(5)</tt>.  A port
	will be made available for those who wish to track ongoing
	development more closely.</p>
    </body>

    <sponsor>DARP/AFRL</sponsor>
    <sponsor>SRI International</sponsor>
    <sponsor>University of Cambridge</sponsor>

    <help>
      <task>Add support for remote debugging (gdbserver-compatible
	debugserver).</task>

      <task>Add support for local and core file kernel
	debugging.</task>

      <task>Implement, fix or test support on all non-amd64
	architectures.</task>

      <task>Verify cross-debugging.</task>
      <task>Investigate and fix test suite failures.</task>
      <task>Package LLDB as a port.</task>

      <task>Enable by default in the base system for working
	architectures.</task>
    </help>
  </project>

  <project cat='bin'>
    <title><tt>auditdistd(8)</tt></title>

    <contact>
      <person>
	<name>
	  <given>Pawel Jakub</given>
	  <common>Dawidek</common>
	</name>
	<email>pjd@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The <tt>auditdistd(8)</tt> daemon is responsible for
	distributing audit trail files over TCP/IP networks securely
	and reliably.</p>

      <p>The daemon now supports client-side certificates, which can
	be used to automatically configure the receiver side &mdash;
	the directory name for received trail files is determined
	based on the <tt>commonName</tt> field in client's
	certificate.  There is no need any more to add every sender to
	the receiver's configuration file.</p>

      <p>The sender's functionality was extended to allow sending
	audit trail files to multiple receivers.</p>

      <p>Complete Public Key Infrastructure (PKI) support is now
	implemented, including full certificate chain verification,
	Certificate Revocation Lists (CRL) verification at every level
	and support for multiple Certificate Authority (CA)
	certificates.</p>
    </body>

    <sponsor>The &os; Foundation</sponsor>
  </project>

  <project cat='kern'>
    <title>SDIO Driver</title>

    <contact>
      <person>
	<name>
	  <given>Ilya</given>
	  <common>Bakulin</common>
	</name>
	<email>ilya@bakulin.de</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/SDIO">SDIO project page on &os; wiki</url>
      <url href="https://github.com/kibab/freebsd/tree/mmccam">Source code</url>
    </links>

    <body>
      <p>SDIO is an interface designed as an extension of the existing
	SD card standard, allowing connection of different peripherals
	to the host with the standard SD controller.  Peripherals
	currently sold on the general market include WLAN/BT modules,
	cameras, fingerprint readers, and barcode scanners.  The &os;
	driver is implemented as an extension to the existing MMC bus,
	adding a lot of new SDIO-specific bus methods.  A prototype of
	the driver for the Marvell SDIO WLAN/BT (Avastar 88W8787)
	module is also being developed, using the existing Linux
	driver as a reference.</p>

      <p>SDIO card detection and initialization already work; most
	needed bus methods are implemented and tested.</p>

      <p>The WiFi driver is able to load firmware onto the card and
	initialize it.  Migration of the MMC stack to the new locking
	model is necessary in order to work with SDIO cards
	effectively. The &os; CAM implementation is believed to be a
	good choice. There is ongoing work to implement an MMC
	transport for CAM.</p>
    </body>

    <help>
      <task>SDIO stack: finish CAM migration.  The XPT layer is almost
	ready.  What is missing is a SIM module, for which a modified
	version of the SDHCI controller driver will be used, and a
	peripheral module, where porting the <tt>mmcsd(4)</tt> driver
	is required.</task>

      <task>Marvell SDIO WiFi: connect it to the &os; network stack,
	write the code to implement required functions, such as
	sending and receiving data, network scanning and so on.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>GNOME/&os;</title>

    <contact>
      <person>
	<name>
	  <given>&os; GNOME Team</given>
	</name>
	<email>gnome@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.freebsd.org/gnome">GNOME &os; page</url>
      <url href="https://wiki.gnome.org/Projects/Jhbuild/FreeBSD">JHbuild info and results</url>
      <url href="https://github.com/jlmess77/mate-ports">MATE staging repository (might break)</url>
      <url href="http://marcuscom.com/downloads/marcusmerge">GNOME staging repository (might break)</url>
    </links>

    <body>
      <p>GNOME is a desktop environment and graphical user interface
	that runs on top of a computer operating system.  GNOME is
	part of the GNU Project and can be used with various Unix-like
	operating systems, including &os;.</p>

      <p>Preparations for merging GNOME&nbsp;3 are moving forward.
	The work on the documentation is falling behind a bit, but we
	got some solid feedback on the rough work to keep this moving
	forward as well.  In the meantime, deprecation of ports that
	need the old GNOME&nbsp;2 desktop ports has begun.  These
	ports will break when the GNOME desktop components are updated
	to the GNOME&nbsp;3 version.</p>

      <p>Thanks to a combined effort by Ryan Lortie (GNOME developer),
	Ting-Wei Lan (upstream contributor), and &a.kwm;, we now have
	a &os;-powered JHbuild tinderbox.  JHbuild is a build system
	that allows building GNOME upstream code.  Twice a day, it
	will attempt to build Gnome components from a specific branch,
	usually the git master branch, to catch compile issues.  A
	positive side effect is that it lets upstream know GNOME still
	lives on non-Linux systems.  It also exposes the GNOME code
	base to the Clang compiler and <tt>libc++</tt>.  Since the
	start of this project over a hundred issues have been
	fixed.</p>

      <p>Gustau Perez has stepped up and put together a port set in
	the <q>ports-experimental</q> tree of our development
	repository with GNOME 3.12.  It was decided to polish GNOME
	3.12.  It will be merged when the preparation work has
	(mostly) finished, and we are happy with the stability of
	GNOME 3.12.</p>

      <p>Gustau Perez also ported Cinnamon 2.0 to &os;.  It will
	appear in the Ports Collection after GNOME&nbsp;3 has been
	merged.</p>

      <p>MATE 1.8 was released at the beginning of April, Eric Turgeon
	of GhostBSD had volunteered to do that update for &os;.  Note
	that this update is still based on GTK+, version 2.  The
	GTK+&nbsp;3-based MATE is on the roadmap for 1.10.</p>
    </body>

    <help>
      <task>Finish the work needed to be done before GNOME&nbsp;3 can
	be merged at all.  Documentation work, port deprecation, and
	so on.</task>

      <task>Finish porting of MATE 1.8.</task>

      <task>Update Cairo to 1.12 in coordination with the Graphics
	Team.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>GCC in the Ports Collection</title>

    <contact>
      <person>
	<name>
	  <given>Gerald</given>
	  <common>Pfeifer</common>
	</name>
	<email>gerald@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://gcc.gnu.org">Upstream GCC</url>
    </links>

    <body>
      <p>While the age old version of the GNU Compiler Collection
	(GCC) in the base system is on its way out with &os;&nbsp;10
	and later, there are many users who want&mdash;and some
	platforms which need&mdash;to use GCC.</p>

      <p>For that purpose there are various versions of GCC in the
	ports tree, including <tt>lang/gcc46</tt>,
	<tt>lang/gcc47</tt>, <tt>lang/gcc48</tt> and
	<tt>lang/gcc49</tt> which track upstream snapshots of the
	respective release branches, and more importantly
	<tt>lang/gcc</tt> which serves as the canonical version of GCC
	and is the default when a port requests <tt>USE_GCC=yes</tt>
	as well as for some cases of <tt>USES=compiler</tt>.</p>

      <p>With a lot of help from Christoph Moench-Tegeder who fixed
	many ports and made a fair number respect <tt>CXXFLAGS</tt>,
	<tt>LDFLAGS</tt> and friends, we managed to update the
	canonical version from GCC 4.6.4 to GCC 4.7.3.  Many of
	Christoph's fixes also benefit Clang and other modern
	compilers.</p>

      <p>For users of <tt>lang/gcc</tt>, this upgrade proved very
	smooth, and we generally recommend using this port over
	version specific ones.</p>

      <p>After ten years of service <tt>lang/gcc34</tt> retired, as
	did <tt>lang/gcc44</tt> after half that timespan.</p>

      <p>On a related note, with the help of &a.marino;, the license
	of the GCC ports now properly reflects the combination of
	GPLv3 for the compiler itself and GPLv3 with GCC Runtime
	Library Exception for the runtime.  The latter is the key in
	making it possible to use GCC for building and distributing
	non-free software.</p>
    </body>

    <help>
      <task>Move <tt>lang/gcc</tt> from GCC 4.7 to GCC 4.8.</task>
    </help>
  </project>

  <project cat='ports'>
    <title>The Graphics Stack on &os;</title>

    <contact>
      <person>
	<name>&os; Graphics Team</name>
	<email>graphics-team@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/Graphics">Graphics stack roadmap and supported hardware matrix</url>
      <url href="https://wiki.freebsd.org/Graphics/WITH_NEW_XORG">WITH_NEW_XORG status</url>
      <url href="http://trillian.chruetertee.ch/ports/browser/trunk">Ports-related development repository</url>
    </links>

    <body>
      <p>On the kernel side, the Radeon KMS driver was merged in
	<tt>stable/9</tt> and will be available in &os; 9.3-RELEASE.
	Now both the 9.x and 10.x branches share the same support for
	Intel and AMD GPUs.</p>

      <p>The next big tasks are the updates of the DRM generic code and
	the <tt>i915</tt> driver.  Both are making good progress and the
	DRM update should hopefully be ready for wider testing during
	April.  An update of the Radeon driver is on the to-do list, but
	nothing is scheduled yet.</p>

      <p>On the ports tree and packages side, the update to Cairo 1.12
	mentioned in the last quarterly report is ready to be committed,
	as people who tested it either reported improvements or no
	regressions.  As a reminder, the switch from Cairo 1.10 to 1.12
	causes display artifacts with xf86-video-intel 2.7.1, but fixes
	similar problems with other hardware/driver combinations.
	Furthermore, Cairo 1.12 is required by Pango 1.36.0, GTK+ 3.10
	and Firefox 27.0.  A <q>Heads up</q> mail will be posted to the
	<tt>freebsd-x11</tt> mailing-list when this update goes
	live.</p>

      <p>In the graphics stack's ports development tree, new Mesa ports
	are being worked on.  Those ports are required to support GLAMOR
	(the GL-based 2D acceleration library used by Radeon HD 7000+
	cards for instance) and OpenCL (using the GPU to perform
	non-graphical calculations).  We were able to execute some
	"Hello World" OpenCL programs and play with OpenCL in darktable,
	but there are some compatibility issues between Clover (Mesa's
	libOpenCL implementation) and Clang/<tt>libc++</tt>.</p>

      <p>We are preparing an alternate <tt>pkg(8)</tt> repository with
	packages built with <tt>WITH_NEW_XORG</tt>.  The goal is to ease
	the usage of the KMS drivers and move forward with the graphics
	stack updates.  The main <tt>pkg(8)</tt> repository will still
	use the default setting (<tt>WITH_NEW_XORG</tt> set on
	<tt>head</tt>, but not on the <tt>stable</tt> branches).</p>

      <p>This will pave the way to the deprecation
	of<tt>WITH_NEW_XORG</tt> and the removal of the older stack.
	The current plan is to do this after 10.0-RELEASE End-of-Life,
	scheduled on January 31st, 2015.  By that time, the only
	supported releases will be 8.4-RELEASE, 9.3-RELEASE and
	10.1-RELEASE.  &os; 9.3 and 10.1 will be fully equipped to work
	with the newer stack.  Unfortunately, &os; 8.x misses the
	required kernel DRM infrastructure: supporting X.Org here
	cripples progress on the graphics stack and, once
	<tt>WITH_NEW_XORG</tt> is gone, we will not support 8.x as a
	desktop any more.  Therefore, please upgrade to 9.3 or 10.1 when
	they are available.</p>
    </body>

    <help>
      <task>See the <q>Graphics</q> and <q>WITH_NEW_XORG</q> wiki
	pages for up-to-date information.</task>
    </help>
  </project>

  <project cat='team'>
    <title>&os; Port Management Team</title>

    <contact>
      <person>
	<name>
	  <given>Thomas</given>
	  <common>Abthorpe</common>
	</name>
	<email>portmgr-secretary@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Frederic</given>
	  <common>Culot</common>
	</name>
	<email>culot@FreeBSD.org</email>
      </person>

      <person>
	<name>&os; Port Management Team</name>
	<email>portmgr@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://www.FreeBSD.org/ports/"/>
      <url href="http://www.freebsd.org/doc/en_US.ISO8859-1/articles/contributing-ports/"/>
      <url href="http://portsmon.freebsd.org/index.html"/>
      <url href="http://www.freebsd.org/portmgr/index.html"/>
      <url href="http://blogs.freebsdish.org/portmgr/"/>
      <url href="http://www.twitter.com/freebsd_portmgr/"/>
      <url href="http://www.facebook.com/portmgr"/>
      <url href="http://plus.google.com/communities/108335846196454338383"/>
    </links>

    <body>
      <p>The role of the &os; Port Management Team is to ensure that the
	&os; Ports Developer community provides a ports collection that is
	functional, stable, up-to-date and full-featured.  It is also to
	coordinate among the committers and developers who work on
	it.</p>

      <p>The ports tree slowly approaches the 25,000 ports threshold,
	while the PR count exceeds 1,800.  In the first quarter, we
	added four new committers, took in three commit bits for safe
	keeping, and reinstated one commit bit.</p>

      <p>In January, the longest serving port manager, &a.marcus;,
	stepped down from his active duties on the team.  At a similar
	time &a.itetcu; also stepped down from his duties.
	Fortunately, as a result of the first <tt>portmgr-lurkers</tt>
	intake, we were able to replace them with &a.mat; and
	&a.antoine;.</p>

      <p>Commencing March 1, the second intake of
	<tt>portmgr-lurkers</tt> started active duty on <tt>portmgr</tt>
	for a four month duration.  The next two candidates are
	&a.danfe; and &a.culot;.</p>

      <p>This quarter also saw the release of the first quarterly
	branch, namely <tt>2014Q1</tt>.  This branch is intended to
	provide a stable and high-quality ports tree, with patches
	related to security fixes as well as packaging and runtime fixes
	being backported from <tt>head</tt>.</p>

      <p>Ongoing maintenance goes into redports.org, including QAT runs
	and ports and security updates.</p>
    </body>

    <help>
      <task>As previously noted, many PRs continue to languish.  We
	would like to see committers dedicate themselves to closing as
	many as possible.</task>
    </help>
  </project>

  <project cat='bin'>
    <title>External Toolchain Improvements</title>

    <contact>
      <person>
	<name>
	  <given>Warner</given>
	  <common>Losh</common>
	</name>
	<email>imp@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="https://wiki.freebsd.org/ExternalToolchain">&a.brooks;' XCC work</url>
    </links>

    <body>
      <p>Building on the work that &a.brooks; did to enable external
	Clang toolchains, this project hopes to generalize that to
	GCC, as well as support different versions of these compilers
	simultaneously for the &os; base system and the kernel.  We
	also hope get to the point that a port can be cross-compiled
	entirely from scratch with no initial binary artifacts.</p>
    </body>

    <help>
      <task>Setup Subversion project repository.</task>

      <task>Fix issues with differences of interpretation of the
	<tt>-B</tt> argument between GCC and Clang.</task>

      <task>Support building the entire tree based only on xdev-built
	compilers.</task>

      <task>Support building the entire tree based only on ports-built
	GCC compilers.</task>

      <task>Support full bootstrapping of &os; to new
	platforms.</task>
    </help>
  </project>

  <project cat='bin'>
    <title>Forward Port &os; GCC</title>

    <contact>
      <person>
	<name>
	  <given>Warner</given>
	  <common>Losh</common>
	</name>
	<email>imp@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>Not all of the &os; changes to GCC have been reflected
	upstream.  A large amount of the platform support as well as a
	couple of minor improvements like the kernel formatting
	checker need to be forward ported (and if possible, moved
	upstream into GCC).</p>

      <p>We will be targeting the &os; ports tree <tt>lang/gcc*</tt>
	ports for these efforts to (optionally) include them in these
	builds.  Some variation from normal builds may be required due
	to bootstrapping issues when combined with the external
	toolchain enhancements project.</p>
    </body>
  </project>

  <project cat='team'>
    <title>&os; Postmaster Team</title>

    <contact>
      <person>
	<name>&os; Postmaster Team </name>
	<email>postmaster@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The &os; Postmaster Team is responsible for mail being
	correctly delivered to the committers' email addresses, ensuring
	that the mailing lists work, and should take measures against
	possible disruptions of project mail services, such as having
	troll-, spam- and virus-filters.</p>

      <p>In the first quarter of 2014, the team has implemented these
	items that may be interest of the general public:</p>

      <ul>
	<li>Continued a discussion on current and possible future mail
	  and spam filtering.</li>

	<li>Discovered more of what needs to be done for a new year
	  (with respect to email archives), did what we could, and
	  recorded the steps for next time.</li>

	<li>Added &a.koobs; to <tt>donations</tt>, requested by
	  &a.gahr;.</li>

	<li>Added &a.wblock; to <tt>doceng</tt>.</li>

	<li>Made sure <tt>portmgr</tt> receives bounces for
	  <tt>pkg-fallout</tt> messages.</li>

	<li>Created a <tt>jenkins-admin</tt> mail alias.</li>

	<li>Enabled Mailman password reminder emails again.</li>

	<li>Discovered that all Mailman cron jobs were disabled in
	  November during upgrades.  Enabled those again.  This caused
	  problems like digests not being sent.</li>
      </ul>
    </body>
  </project>

  <project cat='team'>
    <title>&os; Core Team</title>

    <contact>
      <person>
	<name>&os; Core Team</name>
	<email>core@FreeBSD.org</email>
      </person>
    </contact>

    <body>
      <p>The &os; Core Team constitutes the project's <q>Board of
	Directors</q>, responsible for deciding the project's overall
	goals and direction as well as managing specific areas of the
	&os; project landscape.</p>

      <p>The first quarter of 2014 was very active for the Core Team.
	&a.jhb; and &a.theraven; kept coordinating the work required
	for providing a newer version of X.Org for 9.x and 10.x
	systems. Now that <tt>vt(4)</tt>, a successor to
	<tt>syscons(4)</tt> that offers a KMS-enabled console, has
	been merged to both <tt>stable/9</tt> and <tt>stable/10</tt>,
	an alternative <tt>pkg(8)</tt> repository is in preparation
	for wider testing of <tt>vt(4)</tt> and the new X.Org version.
	In addition to that, &a.jhb; published the
	policy on licenses for new files and files with non-standard
	licenses.  Thanks to the efforts of &a.gavin;, &os; has again
	made it into the Google Summer of Code program, for the tenth
	time.  &a.theraven; reported that both <tt>libc++</tt> and
	<tt>libstdc++</tt> can now be built, as all of the
	standards-compliant implementations of the required numerical
	functions have been added.</p>

      <p>The Core Team conducted an annual review among the Project
	teams and hats, where team members had to declare whether they
	wished to continue their service.  As a result, &a.flo;
	replaced &a.dhw; in the lead role of the Postmaster Team, and
	&a.gjb; assumed the head Release Engineer position from
	&a.kensmith;.  The Core Team congratulates Florian and Glen,
	and thanks David and Ken for their long-standing work.</p>

      <p>The Core Team approved chartering the Ports Security Team,
	which is established to maintain security updates for the
	ported applications.  In coordination with the Port Management
	Team, <tt>pkg_tools</tt> was eventually deprecated and tagged
	with an End-of-Life date, in order to clear the way for
	<tt>pkg(8)</tt>.  The Port Management Team also requested a
	way to make it possible to track userland ABI and KBI changes
	reliably for the Ports Collection.  Ideally this can be
	achieved by increasing the value of <tt>__FreeBSD_version</tt>
	on each fix, therefore the corresponding discussion concluded
	in freezing the ABI note tag for releases in order to keep the
	size of binary patches for <tt>freebsd-update(8)</tt> low.
	A related Errata Notice is about to be published soon.</p>

      <p>Only a single commit bit was taken for safekeeping.
	We did not have new committers to the <tt>src/</tt> repository
	in this quarter.</p>
    </body>
  </project>

  <project cat='proj'>
    <title>ZFSguru</title>

    <contact>
      <person>
	<name>
	  <given>Jason</given>
	  <common>Edwards</common>
	</name>
	<email>sub.mesa@gmail.com</email>
      </person>
    </contact>

    <links>
      <url href="http://zfsguru.com/">Home page</url>
    </links>

    <body>
      <p>ZFSguru is a multifunctional server appliance with a strong
	emphasis on storage.  It wants to deliver all the great BSD
	and ZFS technology to a wider audience, while at the same time
	pleasing more advanced users as well with unique features and
	customization.</p>

      <p>A <q>vanilla</q> ZFSguru installation comes with only Samba
	and a web-interface setup, but can be extended easily by
	installing addons called <q>services</q> to add functionality
	as desired. This prevents users from running programs they do
	not need and do not want.  Advanced users can still use
	ZFSguru as they would a normal &os; installation with a 100%
	ZFS setup (<q>Root-on-ZFS</q>).  ZFSguru does not strip away
	anything, and uses a <tt>GENERIC</tt>-like kernel with only
	some additional settings added like InfiniBand networking,
	Device Polling and AltQ.  This means you can use a ZFSguru
	installation as you would use a &os; installation.</p>

      <p>In the first month of 2014, ZFSguru has released beta9
	version of the web interface.  This release brings vastly
	improved support for Samba and NFS configuration.  In
	particular, it adds a convenient drag-and-drop interface for
	Samba permissions.  This allows novice users to configure
	access to shares in various configurations.  It allows both
	control and usability, with no manual being necessary in order
	to operate it.  This is the ZFSguru style.</p>

      <p>New system versions have been released, based on &os; 9.2,
	10.0, and <tt>head</tt>.  The experimental <tt>head</tt>
	version has <tt>vt(4)</tt> and X.org 7.12.4 and the
	Intel/Radeon KMS graphics drivers.  That is, the latest and
	greatest of &os; graphics development.  The ZFSguru project
	plans to release <tt>stable/10</tt> builds in the near future
	which also have the MFCed patches for <tt>vt(4)</tt>, the
	KMS-enabled system console with Unicode support.  Please see
	the <tt>vt(4)</tt> entry for more information.</p>

      <p>Support for ZFS version 5000 is now universal across 9.2,
	10.0 and <tt>head</tt> builds.  LZ4 compression is the key
	feature for ZFS version 5000.  Otherwise users are advised to
	keep their pool versions as is, to be as compatible as you can
	with as many ZFS platforms as possible.  Only upgrade the pool
	as you desire its functionality, forfeiting the compatibility
	with older storage platforms.</p>
    </body>

    <help>
      <task>ZFSguru beta10 will increase the compatibility of newly added
	Samba functionality with non-Gecko browsers.  It will also fix
	some minor bugs as well as speed up some pages by having a
	redesigned remote database system called GuruDB.</task>

      <task>ZFSguru beta11 will add the one major feature still
	missing in ZFSguru: the Migration Manager.  This allows users
	to maintain a file with all the configuration of their ZFSguru
	installation. It can be used like a firmware &mdash; restoring
	the machine to the exact state and configuration of the
	snapshot configuration. It allows users to maintain a backup
	of their ZFSguru configuration and allows upgrading to a newer
	ZFSguru system version without any hassle.</task>

      <task>Automated system builds should bring more system image
	releases.</task>

      <task>New website with new forum and new login system.</task>

      <task>Developer website with GitLab setup, allowing bug reports,
	code contributions, wiki, and wall messages.  Note that GitLab
	has also been provided as a ZFSguru service, for those
	interested in trying GitLab.</task>
    </help>
  </project>

  <project cat='arch'>
    <title>bhyve</title>

    <contact>
      <person>
	<name>
	  <given>Peter</given>
	  <common>Grehan</common>
	</name>
	<email>grehan@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Neel</given>
	  <common>Natu</common>
	</name>
	<email>neel@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>John</given>
	  <common>Baldwin</common>
	</name>
	<email>jhb@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Tycho</given>
	  <common>Nightingale</common>
	</name>
	<email>tychon@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Allan</given>
	  <common>Jude</common>
	</name>
	<email>freebsd@allanjude.com</email>
      </person>
    </contact>

    <links>
      <url href="http://www.bhyve.org">bhyve FAQ and Talks</url>
      <url href="http://www.youtube.com/watch?v=lTOiSyu0-MA">Talk: bhyve Past, Present, Future</url>
    </links>

    <body>
      <p>bhyve is a Type-1 hypervisor that runs on the &os; platform.
	It currently only runs &os; (9.x or later) and Linux guests;
	current development efforts aim at widening support for other
	x86 64-bit operating systems.  After a great deal of work by
	all involved, bhyve was shipped as part of &os; 10.0-RELEASE.
	Increased interest in bhyve and the first usable versions have
	provided great feedback and many bug reports.</p>

      <p>A number of important improvements have been made to bhyve
	this quarter:</p>

      <ul>
	<li>Optionally ignore accesses to unimplemented MSRs</li>

	<li>Support soft power-off via the ACPI S5 state for bhyve
	  guests</li>

	<li>Graceful shutdown via ACPI on SIGTERM</li>

	<li>Fix an issue with virtio-blk devices on Linux guests with
	  more than 4GB of RAM</li>

	<li>Increase the block-layer backend maximum requests to match
	  AHCI command queue depth</li>

	<li>Add SMBIOS support</li>

	<li>Improve support for nmdm, opening the tty
	  non-blocking</li>

	<li>Add HPET device emulation</li>

	<li>Implement the <q>Virtual Interrupt Delivery</q> and
	  <q>Posted Interrupt Processing</q> VT-x features on newer
	  Intel CPUs</li>

	<li>Add support for booting &os;/i386 guests</li>

	<li>Add virtualized XSAVE support for features like AVX</li>

	<li>Add Support for booting from ZFS with bhyveload</li>
      </ul>
    </body>

    <help>
      <task>Improve documentation.</task>

      <task>Write Handbook chapter for bhyve.</task>

      <task>Merge fixes and features back to
	<tt>stable/10</tt>.</task>

      <task>Support for booting with UEFI instead of userspace
	loaders.</task>

      <task>CSM BIOS boot support for &os; (which has no UEFI support
	currently).</task>

      <task>Add support for virtio-scsi.</task>

      <task>Improve virtio-net, add offload features, support multiple
	queues.</task>

      <task>Implement Intel 82580 and e1000 NIC emulation.</task>

      <task>Netmap support.</task>

      <task>Flexible networking backend: wanproxy, vhost-net.</task>

      <task>Improve resource accounting.</task>

      <task>Move to a single process model, instead of bhyveload and
	bhyve.</task>

      <task>Support running bhyve as non-root.</task>

      <task>Add filters for popular VM file formats (VMDK, VHD,
	QCOW2).</task>

      <task>Implement an abstraction layer for video (no X11 or SDL in
	base system).</task>

      <task>Support for VNC as a video output.</task>

      <task>Implement USB and Sound.</task>

      <task>Suspend/resume support.</task>

      <task>Live Migration.</task>

      <task>Nested VT-x support (bhyve in bhyve).</task>

      <task>Support for other architectures (ARM, MIPS, PPC).</task>
    </help>
  </project>

  <project cat='misc'>
    <title>&os; Participating in Summer of Code 2014</title>

    <contact>
      <person>
	<name>
	  <given>Gavin</given>
	  <common>Atkinson</common>
	</name>
	<email>gavin@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Glen</given>
	  <common>Barber</common>
	</name>
	<email>gjb@FreeBSD.org</email>
      </person>

      <person>
	<name>
	  <given>Wojciech</given>
	  <common>Koszek</common>
	</name>
	<email>wkoszek@FreeBSD.org</email>
      </person>
    </contact>

    <links>
      <url href="http://gsoc.FreeBSD.org" />
      <url href="https://wiki.freebsd.org/SummerOfCode2014" />
    </links>

    <body>
      <p>&os; is pleased to have been accepted as a participating
	organization in Google's Summer of Code 2014.  This will be the
	tenth time we have participated in the program, having been
	selected to participate every year since its introduction.</p>

      <p>This year, the administrators made a special attempt to spread
	the word about Summer of Code around universities, including
	making contact with around 350 mainly Polish, British, African
	and American universities to advertise the Summer of Code
	program, with a particular focus on &os;'s participation.  We
	made contact with both technical departments and student
	societies.  Posters were produced in several languages, and &os;
	committers and users were encouraged to distribute these posters
	around their local universities.</p>

      <p>&os; received a total of 39 proposals from students, and were
	subsequently granted 15 slots from Google.  We are now facing
	the unpleasant challenge of trying to decide which of the 39
	proposals to select, taking into account the quality,
	desirability and feasibility of each proposal, as well as
	ensuring we will be able to provide an excellent mentoring
	experience to each selected student.  All mentors have
	volunteered to mentor, and we pair students with mentors
	primarily based on the prospective mentor's areas of expertise,
	interest in the project, also taking into account the desire to
	pair students up with mentors in similar time zones in order to
	improve the student experience.  The final list of accepted
	students is expected to be announced on the 21st April.</p>
    </body>
  </project>
</report>
